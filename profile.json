{
    "alloc_samples": 17,
    "elapsed_time_sec": 1.7469110488891602,
    "files": {
        "/Users/dawsonren/Documents/Research/NurseSim/ProblemInstance/ProblemInstance.py": {
            "functions": [
                {
                    "line": "ProblemInstance._serializeArray",
                    "lineno": 30,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 6.024577334805863,
                    "n_cpu_percent_c": 0.1114377909171974,
                    "n_cpu_percent_python": 0.4208375789924385,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.0031130512575088497,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "ProblemInstance._lookup",
                    "lineno": 42,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.012075407029718672,
                    "n_cpu_percent_python": 0.4207458895373314,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.002626259453378961,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "ProblemInstance._calculateAvailabilityCol",
                    "lineno": 57,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 8.26094884234857,
                    "n_cpu_percent_c": 33.47689853510132,
                    "n_cpu_percent_python": 49.72962725010752,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 1,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 1.0757519183270277,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "ProblemInstance.expectedRevenueCol",
                    "lineno": 73,
                    "memory_samples": [
                        [
                            318819471,
                            8.562635468158746
                        ],
                        [
                            788194997,
                            10.109464144891282
                        ],
                        [
                            1207952603,
                            11.692448585147456
                        ]
                    ],
                    "n_avg_mb": 2.2164206504821777,
                    "n_copy_mb_s": 13.059740611398054,
                    "n_cpu_percent_c": 4.200219165386873,
                    "n_cpu_percent_python": 2.5308623556199596,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 2.9552383422851562,
                    "n_malloc_mb": 4.4328413009643555,
                    "n_mallocs": 2,
                    "n_peak_mb": 2.9552383422851562,
                    "n_python_fraction": 0.6199726512525034,
                    "n_sys_percent": 0.023752658007098536,
                    "n_usage_fraction": 0.3341897949898683
                }
            ],
            "leaks": {},
            "lines": [
                {
                    "line": "        return A.tobytes()\n",
                    "lineno": 32,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 6.024577334805863,
                    "n_cpu_percent_c": 0.1114377909171974,
                    "n_cpu_percent_python": 0.4208375789924385,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.0031130512575088497,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "        self.cache[(shift, self._serializeArray(y))] = value\n",
                    "lineno": 40,
                    "memory_samples": [
                        [
                            1569912843,
                            14.02719567205626
                        ]
                    ],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.0,
                    "n_cpu_percent_python": 0.0,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 2.2448129653930664,
                    "n_malloc_mb": 2.2448129653930664,
                    "n_mallocs": 0,
                    "n_peak_mb": 2.2448129653930664,
                    "n_python_fraction": 0.619774,
                    "n_sys_percent": 0.0,
                    "n_usage_fraction": 0.16923538059711365
                },
                {
                    "line": "    def _lookup(self, shift: int, y: np.ndarray) -> Union[float, None]:\n",
                    "lineno": 42,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.012075407029718672,
                    "n_cpu_percent_python": 0.4207458895373314,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.002626259453378961,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    def _calculateAvailabilityCol(self, shift: int, y: np.ndarray) -> np.ndarray:\n",
                    "lineno": 57,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 2.022586929814579,
                    "n_cpu_percent_python": 2.104362454808452,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 1,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.023792425496081068,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "        for i in range(1, self.m):\n",
                    "lineno": 61,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.21741552074110448,
                    "n_cpu_percent_python": 0.8441682032269398,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.0030552846321252104,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "            A_col[i] = 1 - y[i - 1] * self.P[i - 1, shift] * A_col[i - 1]\n",
                    "lineno": 62,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 8.26094884234857,
                    "n_cpu_percent_c": 31.23782663633867,
                    "n_cpu_percent_python": 46.78109659207212,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 1.047973656405797,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    def expectedRevenueCol(self, shift: int, y: np.ndarray) -> float:\n",
                    "lineno": 73,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.1095099734528482,
                    "n_cpu_percent_python": 0.42249218153109663,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.001015792465180517,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "            expectedRevenueCol = (self.V[:, shift] * y * self._calculateAvailabilityCol(shift, y)).sum()\n",
                    "lineno": 81,
                    "memory_samples": [
                        [
                            318819471,
                            8.559482094543574
                        ],
                        [
                            788194997,
                            10.117196109505509
                        ],
                        [
                            1207952603,
                            11.683061381170052
                        ]
                    ],
                    "n_avg_mb": 2.2164206504821777,
                    "n_copy_mb_s": 13.059740611398054,
                    "n_cpu_percent_c": 4.089563459276684,
                    "n_cpu_percent_python": 2.1083701740888623,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 2.9552383422851562,
                    "n_malloc_mb": 4.4328413009643555,
                    "n_mallocs": 2,
                    "n_peak_mb": 2.9552383422851562,
                    "n_python_fraction": 0.6199726512525034,
                    "n_sys_percent": 0.023882598199258285,
                    "n_usage_fraction": 0.3341897949898683
                }
            ],
            "percent_cpu_time": 92.00794785973737
        },
        "/Users/dawsonren/Documents/Research/NurseSim/ProblemSolver/ProblemSolver.py": {
            "functions": [
                {
                    "line": "ProblemSolver.optimalColumn",
                    "lineno": 46,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 1.510854642174383,
                    "n_cpu_percent_python": 3.7669866691330034,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 1,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.05983055332841025,
                    "n_usage_fraction": 0.0
                }
            ],
            "leaks": {},
            "lines": [
                {
                    "line": "            y = np.array([[int(k) for k in '{0:b}'.format((i << 1) + 1).zfill(m)]]).T\n",
                    "lineno": 55,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 1.510854642174383,
                    "n_cpu_percent_python": 3.7669866691330034,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.05983055332841025,
                    "n_usage_fraction": 0.0
                }
            ],
            "percent_cpu_time": 5.337671864635797
        },
        "main.py": {
            "functions": [],
            "leaks": {},
            "lines": [
                {
                    "line": "import numpy as np\n",
                    "lineno": 6,
                    "memory_samples": [
                        [
                            31563667,
                            1.5299373607397893
                        ],
                        [
                            48097379,
                            3.704585828035509
                        ],
                        [
                            65387230,
                            5.302096438372664
                        ],
                        [
                            85835274,
                            6.9646792163404925
                        ]
                    ],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.625636747865042,
                    "n_cpu_percent_c": 0.0,
                    "n_cpu_percent_python": 0.0,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 6.586788177490234,
                    "n_malloc_mb": 6.586788177490234,
                    "n_mallocs": 0,
                    "n_peak_mb": 6.586788177490234,
                    "n_python_fraction": 0.9924697012702649,
                    "n_sys_percent": 0.0,
                    "n_usage_fraction": 0.4965748244130181
                }
            ],
            "percent_cpu_time": 0.0
        }
    },
    "gpu": false,
    "growth_rate": 106.39444477357317,
    "max_footprint_fname": "/Users/dawsonren/Documents/Research/NurseSim/ProblemSolver/ProblemSolver.py",
    "max_footprint_lineno": 53,
    "max_footprint_mb": 14.112629890441895,
    "memory": true,
    "program": "main.py",
    "samples": [
        [
            31536524,
            1.5263007436129743
        ],
        [
            48079162,
            3.6945216971647667
        ],
        [
            65303128,
            5.286275197856001
        ],
        [
            85824192,
            6.9661374497593975
        ],
        [
            318802772,
            8.559333020275158
        ],
        [
            788184553,
            10.121082569869781
        ],
        [
            1207941323,
            11.70246387810762
        ],
        [
            1569898387,
            14.044780906052429
        ]
    ]
}
